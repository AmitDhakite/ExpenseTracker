{"version":3,"sources":["components/ExpenseItem.js","components/Card.js","components/ExpenseForm.js","components/NewExpense.js","components/ExpenseFilter.js","components/ChartBar.js","components/Chart.js","components/ExpensesChart.js","App.js","index.js"],"names":["ExpenseItem","props","Date","useState","title","setTitle","className","date","toDateString","amount","onClick","Card","children","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","form","setForm","onSubmit","event","preventDefault","expenseData","onSaveExpenseData","type","value","onChange","target","min","max","NewExpense","enteredExpenseDate","id","Math","random","toString","ExpensesFilter","selected","onChangeYear","ChartBar","barFillHeight","maxValue","round","console","log","style","height","label","Chart","dataPointValues","dataPoints","map","e","totalMaximum","dataPoint","ExpensesChart","chartDataPoints","expenses","expense","getMonth","App","setExpense","filteredYear","setFilteredYear","filteredExpenses","filter","getFullYear","newExpense","prevState","newYear","length","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95318cdb.chunk.js","sourcesContent":["import './ExpenseItem.css';\r\nimport React, {useState} from 'react';\r\n\r\nfunction ExpenseItem(props) {\r\n  const d = new Date();\r\n  const [title, setTitle] = useState(props.title);\r\n  const clickHandler = () => {\r\n    setTitle('Updated');\r\n  }\r\n  return <div className = \"expense-item\">\r\n    <div className=\"expense-date\"> {props.date.toDateString()} </div>\r\n    <div className = \"expense-item__description\">\r\n      <h2>{title}</h2>\r\n      <div className = \"expense-item__price\">\r\n       ${props.amount}\r\n      </div>\r\n      <button onClick={clickHandler}>Change title</button>\r\n    </div>\r\n  </div>;\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import './Card.css';\r\n\r\nfunction Card(props) {\r\n  return <div className = 'card'> {props.children} </div>;\r\n}\r\n\r\nexport default Card;\r\n","import './ExpenseForm.css';\r\nimport React, {useState} from 'react';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  }\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  }\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: ''\r\n  // });\r\n  // const titleChangeHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return {...prevState,\r\n  //     enteredTitle: event.target.value,};\r\n  //   });\r\n  // }\r\n  // const amountChangeHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return {...prevState,\r\n  //     enteredAmount: event.target.value,};\r\n  //   });\r\n  // }\r\n  // const dateChangeHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return {...prevState,\r\n  //     enteredDate: event.target.value,};\r\n  //   });\r\n  // }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate)\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    // console.log(expenseData);\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n    setEnteredTitle('');\r\n  };\r\n\r\n  const [form, setForm] = useState('false');\r\n\r\n  const showForm = () => {\r\n    setForm('true');\r\n  }\r\n  const hideForm = () => {\r\n    setForm('false');\r\n  }\r\n\r\n  return ((form=='false')?(<button onClick={showForm}>Add Expense</button>):(<form onSubmit={submitHandler}>\r\n    <div className = \"new-expense__controls\">\r\n      <div className = \"new-expense__control\">\r\n        <label>Title</label>\r\n        <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n      </div>\r\n      <div className = \"new-expense__control\">\r\n        <label>Amount</label>\r\n        <input type=\"number\" value={enteredAmount}  onChange={amountChangeHandler}/>\r\n      </div><div className = \"new-expense__control\">\r\n        <label>Date</label>\r\n        <input type=\"date\" value={enteredDate} min = \"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\r\n      </div>\r\n    </div>\r\n    <div className = \"new-expense__actions\">\r\n      <button onClick={hideForm}>Cancel</button>\r\n      <button type=\"submit\">Add Expense</button>\r\n    </div>\r\n  </form>));\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\n\r\nconst NewExpense = (props) => {\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseDate) => {\r\n    const expenseData = {\r\n      ...enteredExpenseDate,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onSaveExpenseData(expenseData); \r\n    // console.log(expenseData);\r\n  };\r\n\r\n  return <div className = \"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\r\n  </div>;\r\n}\r\n\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n\r\n  const filterChange = (event) => {\r\n    props.onChangeYear(event.target.value);\r\n  }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterChange}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ChartBar.css';\r\n\r\n\r\nconst ChartBar = (props) =>{\r\n\r\n  let barFillHeight = '0%';\r\n\r\n  if(props.maxValue>0){\r\n    barFillHeight = Math.round((props.value/props.maxValue)*100)+'%';\r\n    console.log(\"height: \"+barFillHeight);\r\n  }\r\n  console.log(props.maxValue);\r\n  return (\r\n    <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n               <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ChartBar;\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(e=>e.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return <div className = 'chart'>\r\n    {props.dataPoints.map((dataPoint) => {\r\n       return <ChartBar\r\n        key={dataPoint.label}\r\n        value={dataPoint.value}\r\n        maxValue={totalMaximum}\r\n        label={dataPoint.label}\r\n         />;\r\n    })}\r\n  </div>;\r\n};\r\n\r\n\r\nexport default Chart;\r\n","import Chart from './Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  // console.log(props);\r\n  const chartDataPoints = [\r\n    {label: 'Jan', value: 0},\r\n    {label: 'Feb', value: 0},\r\n    {label: 'Mar', value: 0},\r\n    {label: 'Apr', value: 0},\r\n    {label: 'May', value: 0},\r\n    {label: 'Jun', value: 0},\r\n    {label: 'Jul', value: 0},\r\n    {label: 'Aug', value: 0},\r\n    {label: 'Sep', value: 0},\r\n    {label: 'Oct', value: 0},\r\n    {label: 'Nov', value: 0},\r\n    {label: 'Dec', value: 0},\r\n  ];\r\n\r\n  for(const expense of props.expenses)\r\n  {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  \r\n  return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\n\r\nexport default ExpensesChart;\r\n","import React, {useState} from 'react';\nimport ExpenseItem from './components/ExpenseItem';\nimport Card from './components/Card';\nimport './components/expense.css';\nimport NewExpense from './components/NewExpense';\nimport ExpenseFilter from './components/ExpenseFilter';\nimport ExpensesChart from './components/ExpensesChart';\n\n\nfunction App() {\n  const expenses = [\n      {\n        id: 'e1',\n        title: 'Toilet Paper',\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n      },\n      { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n      {\n        id: 'e3',\n        title: 'Car Insurance',\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n      },\n      {\n        id: 'e4',\n        title: 'New Desk (Wooden)',\n        amount: 450,\n        date: new Date(2021, 5, 12),\n      },\n    ];\n\n    const [expense, setExpense] = useState(expenses);\n\n    const saveExpenseDataHandler = (newExpense) => {\n      // console.log(newExpense);\n      setExpense((prevState) => {\n        return [newExpense, ...prevState];\n      });\n    };\n\n    const [filteredYear, setFilteredYear] = useState('2021');\n    const yearChangeHandler = (newYear) =>{\n      setFilteredYear(newYear);\n    }\n\n    const filteredExpenses = expense.filter((e) => {\n      return e.date.getFullYear().toString()===filteredYear;\n    });\n\n  return (\n    <div className=\"expenses\">\n      <NewExpense onSaveExpenseData = {saveExpenseDataHandler}/>\n      <ExpenseFilter selected={filteredYear} onChangeYear={yearChangeHandler}/>\n      <ExpensesChart expenses={filteredExpenses}/>\n      {filteredExpenses.length>0?filteredExpenses.map((e) => {\n        return (<Card className = \"expense-item\">\n          <ExpenseItem\n              key={e.id}\n              title = {e.title}\n              amount = {e.amount}\n              date = {e.date}\n              />\n          </Card>\n      );\n    }) : <h2 class=\"No\">Found No Expenses</h2>}\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}